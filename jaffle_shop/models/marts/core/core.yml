version: 2

models:
  - name: fct_orders
    description: Table with all the orders and their details
    columns: 
      - name: order_id
        description: Primary key for fct_orders 
        tests:
          - unique
          - not_null

      - name: customer_id
        description: Foreign key for customers
        tests:
          - not_null

      - name: amount
        description: Dollars spent per order
        tests:
          - assert_dollars_spent_are_greater_than_one:
              group_by_column: customer_id
          - assert_column_is_greater_than_five:
              config:
                severity: error
                error_if: ">20"
          - dbt_expectations.expect_column_values_to_be_between:
            # this will perform what the dbt_utils.expression-is-true test does!
              min_value: 0
              row_condition: "order_id is not null"
              strictly: false
          # - dbt_expectations.expect_column_mean_to_be_between:
          #     min_value: 0 # (Optional)
          #     max_value: 5 # (Optional)
          #     max_failures: 60
          #     group_by: [customer_id] # (Optional)
          #     row_condition: "amount is not null" # (Optional)
          #     strictly: false # (Optional. Default is 'false'. Adds an 'or equal to' to the comparison operator for min/max)
          - assert_amount_average_is_greater_than_one:
              group_by_name: customer_id



  - name: dim_customers
    description: Table with client's information
    columns: 
      - name: customer_id
        description: Primary key for dim_customers table
        tests:
          - not_null
          - unique
          - dbt_utils.cardinality_equality:
              field: customer_id
              to: ref('stg_customers')
      - name: first_name
      - name: last_name
      - name: first_order_date
        description: Null when a customer has not yet placed an order
      - name: lifetime_value
        description: Lifetime value of a customer based on orders purchases       